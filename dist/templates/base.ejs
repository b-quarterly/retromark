<!DOCTYPE html>
<html lang="<%= site.language || 'en' %>" class="theme-<%= config.theme %>">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= page.title ? `${page.title} | ${site.title}` : site.title %></title>
  
  <!-- Site Metadata -->
  <meta name="description" content="<%= page.description || site.description %>">
  <meta name="author" content="<%= site.author %>">
  
  <!-- Theme Styles -->
  <style>
    <%= styles %>
  </style>
  
  <!-- Custom CSS -->
  <% if (config.custom.css) { %>
    <% config.custom.css.forEach(cssFile => { %>
      <link rel="stylesheet" href="<%= urlFor(cssFile) %>">
    <% }) %>
  <% } %>
  
  <!-- Favicon -->
  <% if (config.custom.favicon) { %>
    <link rel="icon" href="<%= urlFor(config.custom.favicon) %>">
  <% } %>
  
  <!-- Font Imports -->
  <% if (config.custom.fonts) { %>
    <% config.custom.fonts.forEach(font => { %>
      <% if (font.url) { %>
        <link rel="stylesheet" href="<%= font.url %>">
      <% } %>
    <% }) %>
  <% } %>
</head>
<body class="layout-<%= config.layout.type %>">
  <!-- Header System -->
  <% if (config.layout.header.position !== 'none') { %>
    <header class="site-header header-<%= config.layout.header.style %> 
                  <%= config.layout.header.position === 'fixed' ? 'header-fixed' : '' %>
                  <%= config.layout.header.position === 'sticky' ? 'header-sticky' : '' %>">
      <% if (config.layout.header.showTitle) { %>
        <div class="site-title">
          <a href="<%= urlFor('/') %>"><%= site.title %></a>
        </div>
      <% } %>
      
      <% if (config.layout.header.showLogo && site.logo) { %>
        <div class="site-logo">
          <a href="<%= urlFor('/') %>">
            <img src="<%= urlFor(site.logo) %>" alt="<%= site.title %>">
          </a>
        </div>
      <% } %>
      
      <% if (config.layout.header.showNav) { %>
        <nav class="main-nav">
          <ul>
            <% config.nav.forEach(item => { %>
              <li class="<%= isCurrentPage(item.path) ? 'active' : '' %>">
                <a href="<%= urlFor(item.path) %>"><%= item.title %></a>
                <% if (item.children && item.children.length > 0) { %>
                  <ul class="submenu">
                    <% item.children.forEach(child => { %>
                      <li>
                        <a href="<%= urlFor(child.path) %>"><%= child.title %></a>
                      </li>
                    <% }) %>
                  </ul>
                <% } %>
              </li>
            <% }) %>
          </ul>
        </nav>
      <% } %>
      
      <% if (config.features.dark_mode) { %>
        <div class="theme-toggle">
          <button id="dark-mode-toggle" aria-label="Toggle dark mode">
            <span class="toggle-icon">üåô</span>
          </button>
        </div>
      <% } %>
    </header>
  <% } %>
  
  <!-- Main Content Container -->
  <div class="retro-container">
    <!-- Sidebar Header -->
    <% if (config.layout.type.includes('sidebar') && config.layout.header.position === 'sidebar') { %>
      <aside class="sidebar-header">
        <div class="sidebar-title">
          <a href="<%= urlFor('/') %>"><%= site.title %></a>
        </div>
        <nav class="sidebar-nav">
          <ul>
            <% config.nav.forEach(item => { %>
              <li class="<%= isCurrentPage(item.path) ? 'active' : '' %>">
                <a href="<%= urlFor(item.path) %>"><%= item.title %></a>
              </li>
            <% }) %>
          </ul>
        </nav>
      </aside>
    <% } %>
    
    <!-- Left Sidebar (TOC or other content) -->
    <% if (config.toc.position === 'sticky-left' || config.layout.sidebar.position === 'left') { %>
      <aside class="sidebar left-sidebar">
        <% if (config.toc.position === 'sticky-left') { %>
          <%= toc %>
        <% } %>
        <!-- Additional sidebar content can go here -->
      </aside>
    <% } %>
    
    <!-- Main Content Area -->
    <main class="content-area" id="main-content">
      <% if (config.toc.position === 'top') { %>
        <div class="toc-top-container">
          <%= toc %>
        </div>
      <% } %>
      
      <article class="retro-content">
        <!-- Page Title -->
        <% if (page.title) { %>
          <h1 class="page-title"><%= page.title %></h1>
        <% } %>
        
        <!-- Page Content -->
        <%= content %>
      </article>
      
      <% if (config.toc.position === 'bottom') { %>
        <div class="toc-bottom-container">
          <%= toc %>
        </div>
      <% } %>
      
      <!-- Pagination -->
      <% if (pagination) { %>
        <div class="pagination">
          <% if (pagination.previous) { %>
            <a href="<%= urlFor(pagination.previous.path) %>" class="pagination-previous">
              ‚Üê <%= pagination.previous.title %>
            </a>
          <% } %>
          
          <% if (pagination.next) { %>
            <a href="<%= urlFor(pagination.next.path) %>" class="pagination-next">
              <%= pagination.next.title %> ‚Üí
            </a>
          <% } %>
        </div>
      <% } %>
    </main>
    
    <!-- Right Sidebar (TOC or other content) -->
    <% if (config.toc.position === 'sticky-right' || config.layout.sidebar.position === 'right') { %>
      <aside class="sidebar right-sidebar">
        <% if (config.toc.position === 'sticky-right') { %>
          <%= toc %>
        <% } %>
        <!-- Additional sidebar content can go here -->
      </aside>
    <% } %>
  </div>
  
  <!-- Footer -->
  <% if (config.layout.footer.enabled) { %>
    <footer class="site-footer">
      <div class="footer-content">
        <% if (config.layout.footer.content) { 
          const year = new Date().getFullYear();
          const footerText = config.layout.footer.content
            .replace('{year}', year)
            .replace('{title}', site.title)
            .replace('{author}', site.author);
        %>
          <p><%= footerText %></p>
        <% } %>
        
        <div class="footer-links">
          <% if (config.nav) { %>
            <ul>
              <% config.nav.forEach(item => { %>
                <li><a href="<%= urlFor(item.path) %>"><%= item.title %></a></li>
              <% }) %>
            </ul>
          <% } %>
        </div>
      </div>
    </footer>
  <% } %>
  
  <!-- Math Support -->
  <% if (config.math.engine === 'katex') { %>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/katex.min.css">
    <script defer src="https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/katex.min.js"></script>
    <script>
      document.addEventListener("DOMContentLoaded", () => {
        renderMathInElement(document.body, {
          delimiters: [
            {left: '<%= config.math.delimiters.inline[0] %>', right: '<%= config.math.delimiters.inline[1] %>', display: false},
            {left: '<%= config.math.delimiters.display[0] %>', right: '<%= config.math.delimiters.display[1] %>', display: true}
          ]
        });
      });
    </script>
  <% } %>
  
  <!-- Custom JavaScript -->
  <% if (config.custom.js) { %>
    <% config.custom.js.forEach(jsFile => { %>
      <script src="<%= urlFor(jsFile) %>"></script>
    <% }) %>
  <% } %>
  
  <!-- Theme Scripts -->
  <script>
    // Dark Mode Toggle
    <% if (config.features.dark_mode) { %>
      const darkModeToggle = document.getElementById('dark-mode-toggle');
      if (darkModeToggle) {
        darkModeToggle.addEventListener('click', () => {
          document.documentElement.classList.toggle('dark-mode');
          localStorage.setItem('darkMode', document.documentElement.classList.contains('dark-mode'));
        });
        
        // Check saved preference
        if (localStorage.getItem('darkMode') === 'true') {
          document.documentElement.classList.add('dark-mode');
        }
      }
    <% } %>
    
    // Print Mode
    <% if (config.features.print_mode) { %>
      document.addEventListener('keydown', (e) => {
        if ((e.ctrlKey || e.metaKey) && e.key === 'p') {
          e.preventDefault();
          document.documentElement.classList.add('print-mode');
          window.print();
          setTimeout(() => {
            document.documentElement.classList.remove('print-mode');
          }, 1000);
        }
      });
    <% } %>
    
    // Progress Bar
    <% if (config.features.progress_bar) { %>
      document.addEventListener('DOMContentLoaded', () => {
        const progressBar = document.createElement('div');
        progressBar.className = 'reading-progress';
        document.body.prepend(progressBar);
        
        window.addEventListener('scroll', () => {
          const scrollTop = window.scrollY;
          const windowHeight = window.innerHeight;
          const docHeight = document.documentElement.scrollHeight;
          const progress = (scrollTop / (docHeight - windowHeight)) * 100;
          progressBar.style.width = `${progress}%`;
        });
      });
    <% } %>
  </script>
  
  <!-- Table of Contents Script -->
  <%= tocScript %>
</body>
</html>
